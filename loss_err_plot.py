import numpy as np
import matplotlib.pyplot as plt
# Poisson2D 1Peak 10ke
# data1 = np.load('./results/Poisson2D1Peak/Poisson2D1Peak_Uni_resample_10000e/train/loss_err.npy')
# data2 = np.load('./results/Poisson2D1Peak/Poisson2D1Peak_RAD_resample_10000e/train/loss_err.npy')
# data3 = np.load('./results/Poisson2D1Peak/Poisson2D1Peak_AAIS_g_resample_10000e/train/loss_err.npy')
# data4 = np.load('./results/Poisson2D1Peak/Poisson2D1Peak_AAIS_t_resample_10000e/train/loss_err.npy')
# fig, ax = plt.subplots(layout='constrained', figsize=(6.4, 4.8))
# ax.semilogy(np.array(data1[:, 0]), label='Uni')
# ax.semilogy(np.array(data2[:, 0]), label='RAD')
# ax.semilogy(np.array(data3[:, 0]), label='AAIS-g')
# ax.semilogy(np.array(data4[:, 0]), label='AAIS-t')
# ax.set_ylim(1e-4, 1e4)
# ax.set_xlim(0, 120000)
# ax.set_xticks(ticks=[0,20000,40000,60000,80000,100000,120000], labels=['0', '20k', '40k', '60k', '80k', '100k','120k'])
# ax.legend(loc='upper right')
# ax.set_xlabel('$Epochs$')
# ax.set_ylabel('Loss')
# fig.savefig('./results/Poisson2D1Peak/resample_loss_10000e.png',dpi=300)
# plt.show()
# fig, ax = plt.subplots(layout='constrained', figsize=(6.4, 4.8))
# ax.semilogy(np.array(data1[:, 1]), label='Uni')
# ax.semilogy(np.array(data2[:, 1]), label='RAD')
# ax.semilogy(np.array(data3[:, 1]), label='AAIS-g')
# ax.semilogy(np.array(data4[:, 1]), label='AAIS-t')
# ax.axhline(y=7e-2, color='black', linestyle='--', linewidth=0.5)
# ax.set_xlim(0, 120000)
# ax.set_xticks(ticks=[0,20000,40000,60000,80000,100000,120000], labels=['0', '20k', '40k', '60k', '80k', '100k','120k'])
# ax.set_ylim(1e-2, 100)
# ax.set_yticks(ticks=[1e-2,0.07,0.1,1,10,100],labels=['$10^{-2}$','$7\\times 10^{-2}$','$10^{-1}$','$10^{0}$', '$10^{1}$','$10^2$'])
# ax.legend(loc='upper right')
# ax.set_xlabel('$Epochs$')
# ax.set_ylabel('relative $L^2$ error $e_r(u(\\cdot;\\theta))$')
# fig.savefig('./results/Poisson2D1Peak/resample_err_10000e.png', dpi=300)
# # Poisson2D9Peak 5000e
# data1 = np.load('./results/Poisson2D9Peak/Poisson2D9Peak_Uni_resample_5000e/train/loss_err.npy')
# data2 = np.load('./results/Poisson2D9Peak/Poisson2D9Peak_RAD_resample_5000e/train/loss_err.npy')
# data3 = np.load('./results/Poisson2D9Peak/Poisson2D9Peak_AAIS_g_resample_5000e/train/loss_err.npy')
# data4 = np.load('./results/Poisson2D9Peak/Poisson2D9Peak_AAIS_t_resample_5000e/train/loss_err.npy')
# fig, ax = plt.subplots(layout='constrained', figsize=(6.4, 4.8))
# ax.semilogy(np.array(data1[:, 0]), label='Uni')
# ax.semilogy(np.array(data2[:, 0]), label='RAD')
# ax.semilogy(np.array(data3[:, 0]), label='AAIS-g')
# ax.semilogy(np.array(data4[:, 0]), label='AAIS-t')
# ax.set_ylim(1, 1e7)
# ax.set_xlim(0, 120000)
# ax.set_xticks(ticks=[0,20000,40000,60000,80000,100000,120000], labels=['0', '20k', '40k', '60k', '80k', '100k','120k'])
# ax.legend(loc='upper right')
# ax.set_xlabel('$Epochs$')
# ax.set_ylabel('Loss')
# fig.savefig('./results/Poisson2D9Peak/resample_loss_5000e.png',dpi=300)
# fig, ax = plt.subplots(layout='constrained', figsize=(6.4, 4.8))
# ax.semilogy(np.array(data1[:, 1]), label='Uni')
# ax.semilogy(np.array(data2[:, 1]), label='RAD')
# ax.semilogy(np.array(data3[:, 1]), label='AAIS-g')
# ax.semilogy(np.array(data4[:, 1]), label='AAIS-t')
# ax.set_xlim(0, 120000)
# ax.set_xticks(ticks=[0,20000,40000,60000,80000,100000,120000], labels=['0', '20k', '40k', '60k', '80k', '100k','120k'])
# ax.set_ylim(6e-2, 100)
# ax.set_yticks(ticks=[0.1,1,10,100],labels=['$10^{-1}$','$10^{0}$', '$10^{1}$','$10^2$'])
# ax.legend(loc='upper right')
# ax.set_xlabel('$Epochs$')
# ax.set_ylabel('relative $L^2$ error $e_r(u(\\cdot;\\theta))$')
# fig.savefig('./results/Poisson2D9Peak/resample_err_5000e.png', dpi=300)


# Burgers2D 5000e
data1 = np.load('./results/Burgers2D/Burgers2D_Uni_resample_5000e/train/loss_err.npy')
data2 = np.load('./results/Burgers2D/Burgers2D_RAD_resample_5000e/train/loss_err.npy')
data3 = np.load('./results/Burgers2D/Burgers2D_AAIS_g_resample_5000e/train/loss_err.npy')
data4 = np.load('./results/Burgers2D/Burgers2D_AAIS_t_resample_5000e/train/loss_err.npy')
fig, ax = plt.subplots(layout='constrained', figsize=(6.4, 4.8))
ax.semilogy(np.array(data1[:, 0]), label='Uni')
ax.semilogy(np.array(data2[:, 0]), label='RAD')
ax.semilogy(np.array(data3[:, 0]), label='AAIS-g')
ax.semilogy(np.array(data4[:, 0]), label='AAIS-t')
ax.set_ylim(1e-6, 1e3)
ax.set_xlim(0, 65000)
ax.set_xticks(ticks=[0,10000,20000,30000,40000,50000,60000], labels=['0', '10k', '20k', '30k', '40k', '50k','60k'])
ax.legend(loc='upper right')
ax.set_xlabel('$Epochs$')
ax.set_ylabel('Loss')
fig.savefig('./results/Burgers2D/resample_loss_5000e.png',dpi=300)
fig, ax = plt.subplots(layout='constrained', figsize=(6.4, 4.8))
ax.semilogy(np.array(data1[:, 1]), label='Uni')
ax.semilogy(np.array(data2[:, 1]), label='RAD')
ax.semilogy(np.array(data3[:, 1]), label='AAIS-g')
ax.semilogy(np.array(data4[:, 1]), label='AAIS-t')
ax.set_xlim(0, 65000)
ax.set_xticks(ticks=[0,10000,20000,30000,40000,50000,60000], labels=['0', '10k', '20k', '30k', '40k', '50k','60k'])
ax.axhline(y=6e-4, color='black', linestyle='--', linewidth=0.5)
ax.set_ylim(1e-4, 10)
ax.set_yticks(ticks=[1e-4,6e-4,1e-3,1e-2,1e-1,1,10],labels=['$10^{-4}$','$6\\times 10^{-4}$','$10^{-3}$','$10^{-2}$','$10^{-1}$','$10^{0}$', '$10^{1}$'])
ax.legend(loc='upper right')
ax.set_xlabel('$Epochs$')
ax.set_ylabel('relative $L^2$ error $e_r(u(\\cdot;\\theta))$')
fig.savefig('./results/Burgers2D/resample_err_5000e.png', dpi=300)


# Burgers2D 5000e
data1 = np.load('./results/Burgers2D/Burgers2D_Uni_resample_5000e/train/loss_err.npy')
data2 = np.load('./results/Burgers2D/Burgers2D_RAD_resample_5000e/train/loss_err.npy')
data3 = np.load('./results/Burgers2D/Burgers2D_AAIS_g_resample_5000e/train/loss_err.npy')
data4 = np.load('./results/Burgers2D/Burgers2D_AAIS_t_resample_5000e/train/loss_err.npy')
fig, ax = plt.subplots(layout='constrained', figsize=(6.4, 4.8))
ax.semilogy(np.array(data1[:, 0]), label='Uni')
ax.semilogy(np.array(data2[:, 0]), label='RAD')
ax.semilogy(np.array(data3[:, 0]), label='AAIS-g')
ax.semilogy(np.array(data4[:, 0]), label='AAIS-t')
ax.set_ylim(1e-6, 1e3)
ax.set_xlim(0, 65000)
ax.set_xticks(ticks=[0,10000,20000,30000,40000,50000,60000], labels=['0', '10k', '20k', '30k', '40k', '50k','60k'])
ax.legend(loc='upper right')
ax.set_xlabel('$Epochs$')
ax.set_ylabel('Loss')
fig.savefig('./results/Burgers2D/resample_loss_5000e.png',dpi=300)
fig, ax = plt.subplots(layout='constrained', figsize=(6.4, 4.8))
ax.semilogy(np.array(data1[:, 1]), label='Uni')
ax.semilogy(np.array(data2[:, 1]), label='RAD')
ax.semilogy(np.array(data3[:, 1]), label='AAIS-g')
ax.semilogy(np.array(data4[:, 1]), label='AAIS-t')
ax.set_xlim(0, 65000)
ax.set_xticks(ticks=[0,10000,20000,30000,40000,50000,60000], labels=['0', '10k', '20k', '30k', '40k', '50k','60k'])
ax.axhline(y=6e-4, color='black', linestyle='--', linewidth=0.5)
ax.set_ylim(1e-4, 10)
ax.set_yticks(ticks=[1e-4,6e-4,1e-3,1e-2,1e-1,1,10],labels=['$10^{-4}$','$6\\times 10^{-4}$','$10^{-3}$','$10^{-2}$','$10^{-1}$','$10^{0}$', '$10^{1}$'])
ax.legend(loc='upper right')
ax.set_xlabel('$Epochs$')
ax.set_ylabel('relative $L^2$ error $e_r(u(\\cdot;\\theta))$')
fig.savefig('./results/Burgers2D/resample_err_5000e.png', dpi=300)
# Burgers2D 5000e
data1 = np.load('./results/Burgers2D/Burgers2D_Uni_resample_5000e/train/loss_err.npy')
data2 = np.load('./results/Burgers2D/Burgers2D_RAD_resample_5000e/train/loss_err.npy')
data3 = np.load('./results/Burgers2D/Burgers2D_AAIS_g_resample_5000e/train/loss_err.npy')
data4 = np.load('./results/Burgers2D/Burgers2D_AAIS_t_resample_5000e/train/loss_err.npy')
fig, ax = plt.subplots(layout='constrained', figsize=(6.4, 4.8))
ax.semilogy(np.array(data1[:, 0]), label='Uni')
ax.semilogy(np.array(data2[:, 0]), label='RAD')
ax.semilogy(np.array(data3[:, 0]), label='AAIS-g')
ax.semilogy(np.array(data4[:, 0]), label='AAIS-t')
ax.set_ylim(1e-6, 1e3)
ax.set_xlim(0, 65000)
ax.set_xticks(ticks=[0,10000,20000,30000,40000,50000,60000], labels=['0', '10k', '20k', '30k', '40k', '50k','60k'])
ax.legend(loc='upper right')
ax.set_xlabel('$Epochs$')
ax.set_ylabel('Loss')
fig.savefig('./results/Burgers2D/resample_loss_5000e.png',dpi=300)
fig, ax = plt.subplots(layout='constrained', figsize=(6.4, 4.8))
ax.semilogy(np.array(data1[:, 1]), label='Uni')
ax.semilogy(np.array(data2[:, 1]), label='RAD')
ax.semilogy(np.array(data3[:, 1]), label='AAIS-g')
ax.semilogy(np.array(data4[:, 1]), label='AAIS-t')
ax.set_xlim(0, 65000)
ax.set_xticks(ticks=[0,10000,20000,30000,40000,50000,60000], labels=['0', '10k', '20k', '30k', '40k', '50k','60k'])
ax.axhline(y=6e-4, color='black', linestyle='--', linewidth=0.5)
ax.set_ylim(1e-4, 10)
ax.set_yticks(ticks=[1e-4,6e-4,1e-3,1e-2,1e-1,1,10],labels=['$10^{-4}$','$6\\times 10^{-4}$','$10^{-3}$','$10^{-2}$','$10^{-1}$','$10^{0}$', '$10^{1}$'])
ax.legend(loc='upper right')
ax.set_xlabel('$Epochs$')
ax.set_ylabel('relative $L^2$ error $e_r(u(\\cdot;\\theta))$')
fig.savefig('./results/Burgers2D/resample_err_5000e.png', dpi=300)


# Burgers2D 5000e
# data1 = np.load('./results/Burgers2D/Burgers2D_Uni_resample_5000e/train/loss_err.npy')
# data2 = np.load('./results/Burgers2D/Burgers2D_RAD_resample_5000e/train/loss_err.npy')
# data3 = np.load('./results/Burgers2D/Burgers2D_AAIS_g_resample_5000e/train/loss_err.npy')
# data4 = np.load('./results/Burgers2D/Burgers2D_AAIS_t_resample_5000e/train/loss_err.npy')
# fig, ax = plt.subplots(layout='constrained', figsize=(6.4, 4.8))
# ax.semilogy(np.array(data1[:, 0]), label='Uni')
# ax.semilogy(np.array(data2[:, 0]), label='RAD')
# ax.semilogy(np.array(data3[:, 0]), label='AAIS-g')
# ax.semilogy(np.array(data4[:, 0]), label='AAIS-t')
# ax.set_ylim(1e-6, 1e3)
# ax.set_xlim(0, 65000)
# ax.set_xticks(ticks=[0,10000,20000,30000,40000,50000,60000], labels=['0', '10k', '20k', '30k', '40k', '50k','60k'])
# ax.legend(loc='upper right')
# ax.set_xlabel('$Epochs$')
# ax.set_ylabel('Loss')
# fig.savefig('./results/Burgers2D/resample_loss_5000e.png',dpi=300)
# fig, ax = plt.subplots(layout='constrained', figsize=(6.4, 4.8))
# ax.semilogy(np.array(data1[:, 1]), label='Uni')
# ax.semilogy(np.array(data2[:, 1]), label='RAD')
# ax.semilogy(np.array(data3[:, 1]), label='AAIS-g')
# ax.semilogy(np.array(data4[:, 1]), label='AAIS-t')
# ax.set_xlim(0, 65000)
# ax.set_xticks(ticks=[0,10000,20000,30000,40000,50000,60000], labels=['0', '10k', '20k', '30k', '40k', '50k','60k'])
# ax.axhline(y=6e-4, color='black', linestyle='--', linewidth=0.5)
# ax.set_ylim(1e-4, 10)
# ax.set_yticks(ticks=[1e-4,6e-4,1e-3,1e-2,1e-1,1,10],labels=['$10^{-4}$','$6\\times 10^{-4}$','$10^{-3}$','$10^{-2}$','$10^{-1}$','$10^{0}$', '$10^{1}$'])
# ax.legend(loc='upper right')
# ax.set_xlabel('$Epochs$')
# ax.set_ylabel('relative $L^2$ error $e_r(u(\\cdot;\\theta))$')
# fig.savefig('./results/Burgers2D/resample_err_5000e.png', dpi=300)


# AllenCahn 2D 100iter
# data1 = np.load('./results/AllenCahn2D/AllenCahn2D_Uni_resample_2000e/train/loss_err_iter.npy')
# data2 = np.load('./results/AllenCahn2D/AllenCahn2D_RAD_resample_2000e/train/loss_err_iter.npy')
# data3 = np.load('./results/AllenCahn2D/AllenCahn2D_AAIS_g_resample_2000e/train/loss_err_iter.npy')
# data4 = np.load('./results/AllenCahn2D/AllenCahn2D_AAIS_t_resample_2000e/train/loss_err_iter.npy')
# fig, ax = plt.subplots(layout='constrained', figsize=(6.4, 4.8))
# ax.semilogy(np.array(data1[:, 0]), label='Uni')
# ax.semilogy(np.array(data2[:, 0]), label='RAD')
# ax.semilogy(np.array(data3[:, 0]), label='AAIS-g')
# ax.semilogy(np.array(data4[:, 0]), label='AAIS-t')
# ax.legend(loc='upper right')
# ax.set_xlim(-5,105)
# ax.set_xticks(ticks=[0,20,40,60,80,100],labels=['pre','20','40','60','80','100'])
# ax.set_xlabel('Iterations')
# ax.set_ylim(5e-7,8e-3)
# ax.set_ylabel('Loss')
# fig.savefig('./results/AllenCahn2D/resample_loss_2000e_iter.png',dpi=300)
# fig, ax = plt.subplots(layout='constrained', figsize=(6.4, 4.8))
# ax.semilogy(np.array(data1[:, 1]), label='Uni')
# ax.semilogy(np.array(data2[:, 1]), label='RAD')
# ax.semilogy(np.array(data3[:, 1]), label='AAIS-g')
# ax.semilogy(np.array(data4[:, 1]), label='AAIS-t')
# ax.axhline(y=5e-3, color='black', linestyle='--', linewidth=0.5)
# ax.set_xlim(-5,105)
# ax.set_xticks(ticks=[0,20,40,60,80,100],labels=['pre','20','40','60','80','100'])
# ax.set_xlabel('Iterations')
# ax.set_ylim(3e-3,7e-1)
# ax.set_yticks(ticks=[5e-3,1e-2,1e-1],labels=['$5\\times 10^{-3}$','$10^{-2}$','$10^{-1}$'])
# ax.set_ylabel('relative $L^2$ error $e_r(u(\\cdot;\\theta))$')
# ax.legend(loc='upper right')
# fig.savefig('./results/AllenCahn2D/resample_err_2000e_iter.png', dpi=300)


# AllenCahn 2D 100iter
data1 = np.load('./results/KdV2D/KdV2D_Uni_resample_500e/train/loss_err_iter.npy')
data2 = np.load('./results/KdV2D/KdV2D_RAD_resample_500e/train/loss_err_iter.npy')
data3 = np.load('./results/KdV2D/KdV2D_AAIS_g_resample_500e/train/loss_err_iter.npy')
data4 = np.load('./results/KdV2D/KdV2D_AAIS_t_resample_500e/train/loss_err_iter.npy')
fig, ax = plt.subplots(layout='constrained', figsize=(6.4, 4.8))
ax.semilogy(np.array(data1[:, 0]), label='Uni')
ax.semilogy(np.array(data2[:, 0]), label='RAD')
ax.semilogy(np.array(data3[:, 0]), label='AAIS-g')
ax.semilogy(np.array(data4[:, 0]), label='AAIS-t')
ax.legend(loc='upper right')
ax.set_xlim(-5,105)
ax.set_xticks(ticks=[0,20,40,60,80,100],labels=['pre','20','40','60','80','100'])
ax.set_xlabel('Iterations')
ax.set_ylim(3e-4,1e-1)
ax.set_ylabel('Loss')
fig.savefig('./results/KdV2D/resample_loss_500e_iter.png',dpi=300)
fig, ax = plt.subplots(layout='constrained', figsize=(6.4, 4.8))
ax.semilogy(np.array(data1[:, 1]), label='Uni')
ax.semilogy(np.array(data2[:, 1]), label='RAD')
ax.semilogy(np.array(data3[:, 1]), label='AAIS-g')
ax.semilogy(np.array(data4[:, 1]), label='AAIS-t')
ax.axhline(y=3e-2, color='black', linestyle='--', linewidth=0.5)
ax.axhline(y=8e-2, color='black', linestyle='--', linewidth=0.5)
ax.set_xlim(-5,105)
ax.set_xticks(ticks=[0,20,40,60,80,100],labels=['pre','20','40','60','80','100'])
ax.set_xlabel('Iterations')
ax.set_ylim(1e-2,1)
ax.set_yticks(ticks=[1e-2,3e-2,8e-2,1e-1,1],labels=['$10^{-2}$','$3\\times 10^{-2}$','$8\\times 10^{-2}$','$10^{-1}$','$10^{0}$'])
ax.set_ylabel('relative $L^2$ error $e_r(u(\\cdot;\\theta))$')
ax.legend(loc='upper right')
fig.savefig('./results/KdV2D/resample_err_500e_iter.png', dpi=300)