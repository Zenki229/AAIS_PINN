import numpy as np
import matplotlib.pyplot as plt
data1 = np.load('./results/Poisson2D1Peak/Poisson2D1Peak_Uni_resample_10000e/train/loss_err.npy')
data2 = np.load('./results/Poisson2D1Peak/Poisson2D1Peak_RAD_resample_10000e/train/loss_err.npy')
data3 = np.load('./results/Poisson2D1Peak/Poisson2D1Peak_AAIS_g_resample_10000e/train/loss_err.npy')
data4 = np.load('./results/Poisson2D1Peak/Poisson2D1Peak_AAIS_t_resample_10000e/train/loss_err.npy')
fig, ax = plt.subplots(layout='constrained', figsize=(6.4, 4.8))
ax.semilogy(np.array(data1[:, 0]), label='Uni')
ax.semilogy(np.array(data2[:, 0]), label='RAD')
ax.semilogy(np.array(data3[:, 0]), label='AAIS-g')
ax.semilogy(np.array(data4[:, 0]), label='AAIS-t')
# ax.axhline(y=0.001, color='black', linestyle='--', linewidth=1.0)
ax.set_ylim(1e-4, 1e4)
ax.set_xlim(0, 120000)
ax.set_xticks(ticks=[0,20000,40000,60000,80000,100000,120000], labels=['0', '20k', '40k', '60k', '80k', '100k','120k'])
# ax.set_xticks(ticks=[0,5000,10000,15000,20000,25000], labels=['0', '5k', '10k', '15k', '20k', '25k'])
# ax.set_yticks(ticks=[1e-2,0.03,1e-1,1e0,1e1,1e2,1e3,1e4],labels=[f'$10^{-2}$','0.03','$10^{-1}$','$10^0$','$10^1$','$10^2$','$10^3$','$10^4$'])
ax.legend(loc='upper right')
ax.set_xlabel('$Epochs$')
ax.set_ylabel('Loss')
fig.savefig('./results/Poisson2D1Peak/resample_loss_10000e.png',dpi=300)
plt.show()
fig, ax = plt.subplots(layout='constrained', figsize=(6.4, 4.8))
ax.semilogy(np.array(data1[:, 1]), label='Uni')
ax.semilogy(np.array(data2[:, 1]), label='RAD')
ax.semilogy(np.array(data3[:, 1]), label='AAIS-g')
ax.semilogy(np.array(data4[:, 1]), label='AAIS-t')
ax.axhline(y=7e-2, color='black', linestyle='--', linewidth=0.5)
# ax.axhline(y=1e-3, color='black', linestyle='--', linewidth=1)
ax.set_xlim(0, 120000)

ax.set_xticks(ticks=[0,20000,40000,60000,80000,100000,120000], labels=['0', '20k', '40k', '60k', '80k', '100k','120k'])
# ax.set_xticks(ticks=[0,20000,40000,60000,80000,100000], labels=['0', '20k', '40k', '60k', '80k', '100k'])
ax.set_ylim(1e-2, 100)
ax.set_yticks(ticks=[1e-2,0.07,0.1,1,10,100],labels=['$10^{-2}$','$7\\times 10^{-2}$','$10^{-1}$','$10^{0}$', '$10^{1}$','$10^2$'])
ax.legend(loc='upper right')
ax.set_xlabel('$Epochs$')
ax.set_ylabel('relative $L^2$ error $e_r(u(\\cdot;\\theta))$')
fig.savefig('./results/Poisson2D1Peak/resample_err_10000e.png', dpi=300)
plt.show()
# data1 = np.load('./results/Poisson2D1Peak/Poisson2D1Peak_Uni_resample_10000e/train/loss_err_iter.npy')
# data2 = np.load('./results/Poisson2D1Peak/Poisson2D1Peak_RAD_resample_10000e/train/loss_err_iter.npy')
# data3 = np.load('./results/Poisson2D1Peak/Poisson2D1Peak_AAIS_g_resample_10000e/train/loss_err_iter.npy')
# data4 = np.load('./results/Poisson2D1Peak/Poisson2D1Peak_AAIS_t_resample_10000e/train/loss_err_iter.npy')
# fig, ax = plt.subplots(layout='constrained', figsize=(6.4, 4.8))
# ax.semilogy(np.array(data1[:, 0]), label='Uni')
# ax.semilogy(np.array(data2[:, 0]), label='RAD')
# ax.semilogy(np.array(data3[:, 0]), label='AAIS-g')
# ax.semilogy(np.array(data4[:, 0]), label='AAIS-t')
# # ax.axhline(y=0.001, color='black', linestyle='--', linewidth=1.0)
# # ax.set_ylim(1e-6, 1e-3)
# # ax.set_xticks(ticks=[0,20,40,60,80,100], labels=['pre', '20', '40', '60', '80','100'])
# # ax.set_yticks(ticks=[1e-2,0.03,1e-1,1e0,1e1,1e2,1e3,1e4],labels=[f'$10^{-2}$','0.03','$10^{-1}$','$10^0$','$10^1$','$10^2$','$10^3$','$10^4$'])
# ax.legend(loc='upper right')
# fig.savefig('./results/Poisson2D1Peak/resample_loss_10000e_iter.png',dpi=300)
# plt.show()
# fig, ax = plt.subplots(layout='constrained', figsize=(6.4, 4.8))
# ax.semilogy(np.array(data1[:, 1]), label='Uni')
# ax.semilogy(np.array(data2[:, 1]), label='RAD')
# ax.semilogy(np.array(data3[:, 1]), label='AAIS-g')
# ax.semilogy(np.array(data4[:, 1]), label='AAIS-t')
# # ax.axhline(y=3e-2, color='black', linestyle='--', linewidth=0.5)
# # ax.axhline(y=8e-2, color='black', linestyle='--', linewidth=0.5)
# # ax.axhline(y=5e-3, color='black', linestyle='--', linewidth=0.5)
# # ax.set_ylim(1e-2, 1)
# # ax.set_xticks(ticks=[0,20,40,60,80,100], labels=['pre', '20', '40', '60', '80','100'])
# # ax.set_yticks(ticks=[1e-2,0.03,0.08,1e-1,1],labels=['$10^{-2}$', '$3\\times 10^{-2}$','$8\\times 10^{-2}$','$10^{-1}$', '$10^{0}$'])
# ax.legend(loc='upper right')
# ax.set_xlabel('$Epochs$')
# ax.set_ylabel('relative $L^2$ error $e_r(u(\\cdot;\\theta))$')
# fig.savefig('./results/Poisson2D1Peak/resample_err_10000e_iter.png', dpi=300)
# plt.show()
